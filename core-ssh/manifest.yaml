id: serverboards.core.ssh
name: Core SSH support
author: David Moreno <dmoreno@serverboards.io>
version: 17.04
description: >
  Performs core operations needed for SSH connectivity to hosts.

  This may be used by other plugins to achieve their own goals.

components:
  - name: SSH access
    type: service
    traits: ssh url server
    id: ssh
    description: Access via SSH to any server
    icon: terminal
    fields:
      - label: SSH Address
        name: url
        type: text
        validation: empty
        card: true
      - label: SSH `Host` Options
        description: |
          This settings will be applied to all SSH connections. Please check the
          [ssh documentation](https://linux.die.net/man/5/ssh_config) for all
          options.

          Enter one option per line.
        placeholder: |
          eg:
          User remoteuser
          ProxyCommand ssh real.host.com -qW  192.168.1.2:22
          LocalCommand sudo bash
        type: textarea
        name: options
      - label: SSH Public Key
        type: description
        description: |
          To connect via SSH please ensure that the following SSH public key is
          added to your servers `~/.ssh/authorized_keys`:

          **SSH Public Key:**

          ```
          {{ssh_key}}
          ```
        vars:
          - id: ssh_key
            command: serverboards.core.ssh/mgmt
            call: ssh_public_key
      - label: Remote SSH Fingerprint
        type: button
        show_if: url
        depends_on: url
        description: |
          The remote fingerprints are:

          ```
          {{status.fingerprint}}
          ```
          Click on "Enable host" to add to your known_hosts. This is required to access this server.
        value: "{{status.toggle}}"
        className: "{{status.className}}"
        onclick:
            command: serverboards.core.ssh/mgmt
            call: toggle_remote_fingerprint
        vars:
          - id: status
            command: serverboards.core.ssh/mgmt
            call: remote_fingerprint

  - name: SSH Management
    id: management
    description: Screen on which to view known peers
    type: settings/section
    screen:
      html: static/index.html
      js: static/index.js

  - name: SSH Terminal
    id: terminal
    description: Can access via SSH to server
    type: screen
    traits: ssh
    icon: terminal

  - name: Execute SSH Command
    id: exec
    type: action
    command: daemon
    description: Executes a remote command. It is recommended that the key exchange is configured prior, so no ssh passwords are stored on the database.
    traits: ssh server
    icon: terminal
    call:
      method: ssh_exec
      params:
        - name: service
          type: service
          traits: ssh
          label: SSH server
        - name: command
          type: text
          label: Command to execute
          description: Non blocking command to execute

  - name: SSH daemon
    id: daemon
    type: cmd
    timeout: 24h
    strategy: singleton
    perms: event.emit settings.view[serverboards.core.ssh/ssh.settings] service.get file.pipe
    command: serverboards-ssh.py

  - name: SSH
    id: sshcmd
    type: cmd
    timeout: 10m
    strategy: one_for_one
    perms: event.emit settings.view[serverboards.core.ssh/ssh.settings] service.get file.pipe
    command: serverboards-ssh.py

  - name: SSH Management
    id: mgmt
    type: cmd
    timeout: 10s
    strategy: singleton
    perms: event.emit
    command: serverboards-ssh-mgmt.py

  - name: General SSH Settings
    id: ssh.settings
    type: settings
    perms: settings
    fields:
      - label: SSH `Host *` Options
        description: |
          This settings will be applied to all SSH connections. Please check the
          [ssh documentation](https://linux.die.net/man/5/ssh_config) for all
          options.

          Enter one option per line.
        placeholder: |
          eg:
          ControlMaster auto
          ControlPath /tmp/ssh-%h%p%r
          ControlPersist 600
        type: textarea
        name: options

  - id: trigger
    name: SSH Remote command
    description: If a remote command fails, it executes an action.
    type: trigger
    traits: ssh server
    states: nok ok
    command: daemon
    start:
      method: watch_start
      params:
        - name: service
          label: SSH Service
          type: service
          traits: ssh
        - name: period
          label: Check period
          description: |
            Check every given time for the expression.
            Time can use time modifiers as 1m, 30s, 1h...
          placeholder: 5m
          default: 5m
          card: true
          type: text
        - name: script
          card: true
          label: Shell Script
          placeholder: test -e /tmp/test
          description: |
            Shell script to execute on the remote server.

            If this script returns an error code, it goes to the nok status.
          type: textarea
    stop: watch_stop


  - name: SSH Test Command
    id: test-daemon
    type: cmd
    timeout: 1m
    strategy: one_for_one
    perms:
      event.emit
      settings.view[serverboards.core.ssh/ssh.settings]
      service.get
      service.update
      service.create
      plugin
      file.pipe
    command: test.py

  - id: test
    name: SSH Tests
    type: test
    command: test-daemon
