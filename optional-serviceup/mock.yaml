service.get: []
event.subscribe:
  - args: ["service.updated"]
    kwargs: {}
    response: ok
  - args: ["service.inserted"]
    kwargs: {}
    response: ok
  - args: ["service.deleted"]
    kwargs: {}
    response: ok

service.list:
  - args: []
    kwargs: {}
    response:
      - type: http
        uuid: A
        tags: ["status:ok"]
        name: Service A
      - type: http
        uuid: B
        tags: ["status:nok"]
        name: Service B

plugin.component.catalog:
  - args: []
    kwargs: {"type": "service", "id": "http"}
    response:
      - extra:
          status:
            command: "http_checker"
            frequency: 1s
            call: "check_http"

plugin.start:
  - args: ["http_checker"]
    kwargs: {}
    response:
      PLUGINA

plugin.call:
  - args: ["PLUGINA", "check_http", [{"type": "http", "uuid": "A", "tags": ["status:ok"], "name": "Service A"}]]
    kwargs: {}
    response:
      nok
  - args: ["PLUGINA", "check_http", [{"type": "http", "uuid": "B", "tags": ["status:nok"], "name": "Service B"}]]
    kwargs: {}
    response:
      ok

service.update:
  - args: ["B", {"tags": ["status:ok"]}]
    kwargs: {}
    response: ok
  - args: ["A", {"tags": ["status:nok"]}]
    kwargs: {}
    response: ok

issues.get:
  - args: ["service_down/B"]
    kwargs: {}
    response:
      id: ISSUEB
      status: open
  - args: ["service_down/A"]
    kwargs: {}
    response: None

issues.update:
  - args: ["service_down/B", [{"type": "comment", "data": "[Service B](https://localhost:8080/#/services/B) is back to ok"}, {"type": "change_status", "data": "closed"}]]
    kwargs: {}
    response: ok

settings.get:
  - args: ["serverboards.core.settings/base", {}]
    kwargs: {}
    response:
      base_url: https://localhost:8080
